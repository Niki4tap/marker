warning: Printing type for
 --> $DIR/print_ty.rs:4:32
  |
4 | static PRINT_TYPE_PRIMITIVE_1: Option<(u8, u16, u32, u64, u128, usize)> = None;
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(marker_lints::test_lint)]` on by default

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Tuple(
                        (
                            Num(
                                u8,
                            ),
                            Num(
                                u16,
                            ),
                            Num(
                                u32,
                            ),
                            Num(
                                u64,
                            ),
                            Num(
                                u128,
                            ),
                            Num(
                                usize,
                            ),
                        ),
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: Printing type for
 --> $DIR/print_ty.rs:5:32
  |
5 | static PRINT_TYPE_PRIMITIVE_2: Option<(i8, i16, i32, i64, i128, isize)> = None;
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Tuple(
                        (
                            Num(
                                i8,
                            ),
                            Num(
                                i16,
                            ),
                            Num(
                                i32,
                            ),
                            Num(
                                i64,
                            ),
                            Num(
                                i128,
                            ),
                            Num(
                                isize,
                            ),
                        ),
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: Printing type for
 --> $DIR/print_ty.rs:6:32
  |
6 | static PRINT_TYPE_PRIMITIVE_3: Option<(char, bool, f32, f64)> = None;
  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Tuple(
                        (
                            Text(
                                char,
                            ),
                            Bool(
                                bool,
                            ),
                            Num(
                                f32,
                            ),
                            Num(
                                f64,
                            ),
                        ),
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: Printing type for
 --> $DIR/print_ty.rs:7:29
  |
7 | static PRINT_TYPE_SEQUENCE: Option<AllowSync<(&[i32], [i32; 8])>> = None;
  |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Struct(
                        StructTy {
                            data: CommonTyData {
                                _lifetime: PhantomData<&()>,
                                span: Some(
                                    SpanId(..),
                                ),
                                is_syntactic: true,
                            },
                            def_id: TyDefId(..),
                            generic_args: GenericArgs {
                                args: [
                                    Ty(
                                        Tuple(
                                            (
                                                Ref(
                                                    RefTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        lifetime: Some(
                                                            Lifetime {
                                                                _lifetime: PhantomData<&()>,
                                                                span: Some(
                                                                    SpanId(..),
                                                                ),
                                                                kind: Static,
                                                            },
                                                        ),
                                                        is_mut: false,
                                                        inner_ty: Slice(
                                                            [
                                                                Num(
                                                                    i32,
                                                                ),
                                                            ],
                                                        ),
                                                    },
                                                ),
                                                Array(
                                                    [
                                                        Num(
                                                            i32,
                                                        ),
                                                    ],
                                                ),
                                            ),
                                        ),
                                    ),
                                ],
                            },
                            is_non_exhaustive: false,
                        },
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: Printing type for
 --> $DIR/print_ty.rs:8:28
  |
8 | static PRINT_TYPE_POINTER: Option<AllowSync<(&'static str, *const i32, *mut i32)>> = None;
  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Struct(
                        StructTy {
                            data: CommonTyData {
                                _lifetime: PhantomData<&()>,
                                span: Some(
                                    SpanId(..),
                                ),
                                is_syntactic: true,
                            },
                            def_id: TyDefId(..),
                            generic_args: GenericArgs {
                                args: [
                                    Ty(
                                        Tuple(
                                            (
                                                Ref(
                                                    RefTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        lifetime: Some(
                                                            Lifetime {
                                                                _lifetime: PhantomData<&()>,
                                                                span: Some(
                                                                    SpanId(..),
                                                                ),
                                                                kind: Static,
                                                            },
                                                        ),
                                                        is_mut: false,
                                                        inner_ty: Text(
                                                            str,
                                                        ),
                                                    },
                                                ),
                                                RawPtr(
                                                    RawPtrTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        is_mut: false,
                                                        inner_ty: Num(
                                                            i32,
                                                        ),
                                                    },
                                                ),
                                                RawPtr(
                                                    RawPtrTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        is_mut: true,
                                                        inner_ty: Num(
                                                            i32,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    ),
                                ],
                            },
                            is_non_exhaustive: false,
                        },
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: Printing type for
  --> $DIR/print_ty.rs:9:28
   |
9  |   static PRINT_TYPE_COMPLEX: Option<
   |  ____________________________^
10 | |     AllowSync<(
11 | |         String,
12 | |         Option<String>,
...  |
16 | |     )>,
17 | | > = None;
   | |_^

Enum(
    EnumTy {
        data: CommonTyData {
            _lifetime: PhantomData<&()>,
            span: Some(
                SpanId(..),
            ),
            is_syntactic: true,
        },
        def_id: TyDefId(..),
        generic_args: GenericArgs {
            args: [
                Ty(
                    Struct(
                        StructTy {
                            data: CommonTyData {
                                _lifetime: PhantomData<&()>,
                                span: Some(
                                    SpanId(..),
                                ),
                                is_syntactic: true,
                            },
                            def_id: TyDefId(..),
                            generic_args: GenericArgs {
                                args: [
                                    Ty(
                                        Tuple(
                                            (
                                                Struct(
                                                    StructTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        def_id: TyDefId(..),
                                                        generic_args: GenericArgs {
                                                            args: [],
                                                        },
                                                        is_non_exhaustive: false,
                                                    },
                                                ),
                                                Enum(
                                                    EnumTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        def_id: TyDefId(..),
                                                        generic_args: GenericArgs {
                                                            args: [
                                                                Ty(
                                                                    Struct(
                                                                        StructTy {
                                                                            data: CommonTyData {
                                                                                _lifetime: PhantomData<&()>,
                                                                                span: Some(
                                                                                    SpanId(..),
                                                                                ),
                                                                                is_syntactic: true,
                                                                            },
                                                                            def_id: TyDefId(..),
                                                                            generic_args: GenericArgs {
                                                                                args: [],
                                                                            },
                                                                            is_non_exhaustive: false,
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        is_non_exhaustive: false,
                                                    },
                                                ),
                                                Struct(
                                                    StructTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        def_id: TyDefId(..),
                                                        generic_args: GenericArgs {
                                                            args: [
                                                                Ty(
                                                                    Union(
                                                                        UnionTy {
                                                                            data: CommonTyData {
                                                                                _lifetime: PhantomData<&()>,
                                                                                span: Some(
                                                                                    SpanId(..),
                                                                                ),
                                                                                is_syntactic: true,
                                                                            },
                                                                            def_id: TyDefId(..),
                                                                            generic_args: GenericArgs {
                                                                                args: [],
                                                                            },
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        is_non_exhaustive: false,
                                                    },
                                                ),
                                                Struct(
                                                    StructTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        def_id: TyDefId(..),
                                                        generic_args: GenericArgs {
                                                            args: [
                                                                Ty(
                                                                    TraitObj(
                                                                        TraitObjTy {
                                                                            data: CommonTyData {
                                                                                _lifetime: PhantomData<&()>,
                                                                                span: Some(
                                                                                    SpanId(..),
                                                                                ),
                                                                                is_syntactic: true,
                                                                            },
                                                                            trait_bound: [
                                                                                TraitBound(
                                                                                    TraitBound {
                                                                                        is_relaxed: false,
                                                                                        trait_ref: TraitRef {
                                                                                            item_id: ItemId(..),
                                                                                            generics: GenericArgs {
                                                                                                args: [],
                                                                                            },
                                                                                        },
                                                                                        span: SpanId(..),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        is_non_exhaustive: false,
                                                    },
                                                ),
                                                Struct(
                                                    StructTy {
                                                        data: CommonTyData {
                                                            _lifetime: PhantomData<&()>,
                                                            span: Some(
                                                                SpanId(..),
                                                            ),
                                                            is_syntactic: true,
                                                        },
                                                        def_id: TyDefId(..),
                                                        generic_args: GenericArgs {
                                                            args: [
                                                                Ty(
                                                                    TraitObj(
                                                                        TraitObjTy {
                                                                            data: CommonTyData {
                                                                                _lifetime: PhantomData<&()>,
                                                                                span: Some(
                                                                                    SpanId(..),
                                                                                ),
                                                                                is_syntactic: true,
                                                                            },
                                                                            trait_bound: [
                                                                                TraitBound(
                                                                                    TraitBound {
                                                                                        is_relaxed: false,
                                                                                        trait_ref: TraitRef {
                                                                                            item_id: ItemId(..),
                                                                                            generics: GenericArgs {
                                                                                                args: [
                                                                                                    Binding(
                                                                                                        BindingGenericArg {
                                                                                                            span: Some(
                                                                                                                SpanId(..),
                                                                                                            ),
                                                                                                            ident: SymbolId(..),
                                                                                                            ty: Num(
                                                                                                                i32,
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        },
                                                                                        span: SpanId(..),
                                                                                    },
                                                                                ),
                                                                                Lifetime(
                                                                                    Lifetime {
                                                                                        _lifetime: PhantomData<&()>,
                                                                                        span: Some(
                                                                                            SpanId(..),
                                                                                        ),
                                                                                        kind: Static,
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                        is_non_exhaustive: false,
                                                    },
                                                ),
                                            ),
                                        ),
                                    ),
                                ],
                            },
                            is_non_exhaustive: false,
                        },
                    ),
                ),
            ],
        },
        is_non_exhaustive: false,
    },
)


warning: 6 warnings emitted

